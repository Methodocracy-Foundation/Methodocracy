	Copyright 2014-2015 Zachary Hebert, Patrick Gillespie
	This is part of the Methodocracy Documentation.

    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3
    or any later version published by the Free Software Foundation;
    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
    A copy of the license is included in the section entitled "GNU
    Free Documentation License".
	
	Methodocracy TM is a trademark of Methodocracy.org (C)2014-2015, and all rights to that TM are reserved. Any modified versions are required to be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. And the name Methodocracy TM should be clearly labeled as the source of your work as long as any part of this work remains intact in part or in whole.

An exposition of the differences between data, information, and knowledge, and a metamodel of the three concepts. Used to show competency to Michael Scofield.

Data is the atomic set of values for variables, the lowest level of abstraction. Data is usually stored in tabular, hierarchical, or mathematically graphical structures. Information is a method in which data is organized and interpreted. It is conceptualized as a message, or an answer to a question. Data is like the letters of the alphabet, and information is like the words and sentences. The amount of possible variance in data, or entropy, determines the uncertainty of how incoming information affects the state of a system.

Knowledge is the interpretation of how pieces of information connect with each other. It is an analysis that is built upon within a system. Two systems cannot share knowledge with each other, but they can share information. For example, the code used to run a program is information. In order for this program to copy itself into another program, it must share its code information. If this program analyses information to produce knowledge, then it must also share the source information with the new copy.

The same applies to transferring knowledge between a program and an individual, or two individuals. Only information can be shared between the two entities, but the receiving entity still only internally builds knowledge based upon the information. It is beneficial to note channel noise in every information transfer, so that informed compensations could be developed.